Day1:
1. SSR and CSR.
2. Intro to JSX.
3. NodeJS basics.
4. Virtual DOM and Real DOM.
5. ReactJS.
6. Working of REactJS, floder structure.
7. What is Component? diff between a element and component.
8. class Component
9. State and props.

------> what is SSR and CSR.
1. What is render / rendering ?
first time when a page is painted then this is known as render.

SSR:-
nextjs,nuxtjs
in server side rendering the page is render from the server only.

CSR :-
ReactJS , VanillaJS , VueJS.
in the client side rendering the page is rendered using from user/clinet side.
in ssr is handeld quite easy.

what is JSX ?
Javascript Xtension.
javascript XML(Xtensible markup language)

what is JS and JSX.
JS:- For making UI Interactive web application.
JSX:- JSX is advance version of js in which we can use HTML tag inside our JS file.

Babel:- it is a compiler which converts JSX code in HTML, CSS and JS

SPA:- single page application.

NodeJS Basics.
npx create-react-app myapp
npx create-react-app .
Node Package execute

npm :- Node package Manager
package.json :- in this file all the details related to our project is available.
package-lock.json :- this file is the extended version of package.json. it is a good practice to hide package-lock.json.

Real DOM:-
Document object model(DOM) :- it is the dom provided by browser will all the requirements of a web page.
BOM :- Browser object model :- In BOM we have all the details related to a browser.
Window
Location
navigator
screen
history.
---------------------------------day2-------------------------
Virtual DOM :-
Virtual DOM stores a copy of previous change and compare with the new changes and only update that change in real dom.

counter using dom not react

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <h1>Hello world</h1>
    <button>+</button>
    <h2></h2>
</body>
<script>
    let count = 1;
    let btn = document.querySelector("button");
    let h2 = document.querySelector("h2");
    console.log(h2);
    h2.innerHTML = count;
    btn.addEventListener("click", () => {
        count++;
        console.log(count);
       // h2.innerHTML = count;// Need to add this to handle the behaviour
    });
</script>
</html>


Here the value of count is not chaning in the UI but it is changing in the console. So to overcome this we need to add an extran innerHTML to handle the same behaviour.

So to overcome this kind of issue we will going to use virtual dom.



==> React JS.
React is developed by Facebook (Jordan Walke).
React is a JS Framework and library.
Framework :- It is a collection of libraries.
Library :- It is a collection of limited functions.

==> Why we use ReactJS.
So to make our code less complex and small. It is use to make Interactive User interface.



==> Folder Structure.
React Entry point is index.html inside public folder.


--> Using Components we can reuse the code again and again.


React                           React Native
---------------------------------------------------------
Library                         Framework
Web applications                Mobile applications
Virtual DOM                     Native API
animation CSS                   animated API
HTML Tags                       Can't use HTML Tags
CSS Styling                     JS stylesheet for styling

React Working


First JSX 

1. App -- delete
2. Changed in header logged in -- delete
3. Changed in header logged out -- Virtual DOM.



Virtual DOM -> Babel -> RealDOM

--> OOPS -> Object Oriented Programming Language.
1. Abstraction :- To show only improtant things and hiding the others.
2. Encapsulation :- Properties (variables) and methods (functions) into a single container.
3. Inheritance :- When a child inherit some properties from its parent than it is referred to as Inheritance.
4. Polymorphism :- Passing different message using same name is known as Polymorphism. Function overloading.
5. Classes and Object :- Classes and object.

Function Overloading:- Function name is same but function defination will be different.


function add(a,b) {
    return a+b;
}

function add(a,b,c) {
    return a+b-c;
}

function add(a,b,c,d) {
    return a*b+c+d;
}

print(add(5,6,5,6));

Here we are passing different parameters to the same function 'add' depending upon the number of parameter the function is being called.


Collection of similar type of entities is known as class.
Collection of entities which posses similar kind of behaviour is known as class.

A single entity of a class is known as Object.

Class of entities which :-
1. have 4 legs.
2. two eyes.
3. 1 tail.
4. Bark.
are known as Dogs. -> 10 members

Class of entities which :-
1. have 4 legs/
2. two eyes.
3. drink milk.
4. likes fish.
5. do mio mio.
are known as Cats.


College 
B.Tech -> Same class.
1. course B.Tech 

School
12th Commerce 
12th Bio
12th Maths


element :- The element is returned from the component.
component:- The large entity of a page is referred to as component. State, props and functions are part of component.



LifeCycle :-
Living orga LifeCycle :- 
Birth - create
_______
child  | 
Teen   |
Adult  | -- Updation
Old    |
________ 
Die - destroy

Component:- 
1. Mount -> creation phase
2. Updation -> state change, props change, ref change.
3. Unmount -> destroy

--------------------------


Todo :- 
1. Class Component -> Done
2. state and props in class Component -> Done
3. trigerring functions in class Component -> Done
4. Lifecycles methods of class Component -> In Progress
5. How to update the component without using the State?
6. Difference btn ejs/jsx


--> Class Component:- 
    A react component which we make with the help of class or using the "class" keyword.

    So, to make a class react we use Component class from react Library.
    Here we use inheritance. We inherit some properties of Component class into our Component.

    State and props :- 
    ==> State
        State is a react Object which we use to store some data or information about the component.
        We can use the state only in the particular component.
        We can't use that state outside of that component.
        State informs the Virtual Dom (React DOM) the information or data related to component.
        If there are some changes in the state than state will inform the Virtual DOM that there are some changes in the Component.
        Virtual DOM than compare and re-paint the component.

    ==> Props
        We can pass props from one Component to Another Component.
        Props are Uni-directonal.
        Props Travel from Parent to Child.
        We can't Change the value of Props.

    ==> Prop Drilling :- 
        The process of transferring of data from one component to another component is a DOM tree is known as props drilling.



                  Index
                    | 
                   App
                    |
    _________________________________
    |               |               |
    Header          Main            Footer
    |                                   |
 ________________               _____________
 |              |               |           |
 Login       Signup             Foot1       Foot2
                                |
                                Foot2











Koi Component



==> Read, write and append 
Read :- We can only read/use the value;
Write :- We can assign the new value to it.
Append:- We can add some more data into the value;

let a = 'Hello';
console.log(a); // Read
a = 'Hello2' // Write
a += 'Hello' // 'Hello2 Hello' Append






-> To import any component or functions into another file/Component we have to export the function or component from that file.
-> We can export the function or component in two ways :- 
    1. By using export default.
    2. By exporting all the function/Components as a Object.

While importing the Component or function.
    1. If we are exporting using default than we can directly import it like :- 
    import Main from 'Component/Main';

    2. If we are exporting all as a Object.
        a. We should destructure it from the file.
            import { Main, Main1, Main2 } from 'Component/Main';
        b. We should import all as any Identifier (Name);
            import * as Mains from 'Component/Main';
        

--> Assignments :- 
    1. Revise today Class.
    2. Login page.
        --> User should able to enter email and password.
        --> When clicking on a button user should ableto login and print Hello world with User email address.
        
        
--------------------------------------------------DAY1 MY OWN NOTES-------------------------------------------------------
1. what is SSR?
   Server-side rendering is when content on our webpage is rendered on the server and not on our browser using JavaScript.
   
2. why we are using SSR?
   Server-side rendering (SSR) means that the content of our site is generated on the server, then sent to the browser. 
   This is useful for search engine optimization(SEO) purposes, because search engines can "see" the content of your site
   before they send it to users.

3. what is CSR?
   In client side rendering (CSR), we are completely running ReactJS on the browser.
   The initial HTML rendered by the server is a placeholder and the entire UI is rendered in the browser once all our scripts load.
   
4. What is the difference between SSR and CSR?
   The main difference between SSR and CSR is where the page is rendered.
   SSR renders the page on the server-side and CSR renders the page on the client-side.
   
5. What is JSX ?
   JSX stands for JavaScript XML.
   JSX allows us to write HTML in React.
   JSX makes it easier to write and add HTML in React.

6. What is NodeJS in react?
   NodeJS is a framework of JavaScript which is mainly used for working with the backend of our application 
   ReactJS is a JavaScript front-end library. It is mainly used for building the user interface or the frontend of our application.
   
7. Virtual Dom?
   The virtual DOM (VDOM) is a programming concept where an ideal, or “virtual”, representation of a UI is kept in memory
   and synced with the “real” DOM by a library such as ReactDOM. This process is called reconciliation.

8. what is Real Dom?
   It is a structured representation of HTML in the webpage or application.
   It is a structural representation of HTML elements of a web application in simple words.

9. What id Difference between Real DOm and Virtual DOM?
   Real DOM	                                                Virtual DOM
   There is too much memory wastage	                        No memory wastage
   It updates Slow                                       	It updates fast
   It can directly update HTML	                           It can't update HTML directly
   Creates a new DOM if the element updates.             	Update the JSX if the element update

10. what is ReactJS ?
    A JavaScript library created by Facebook for building user interfaces
    Its aim is to allow developers to easily create fast user interfaces for websites and applications 

11. Working of ReactJS ?------don't know



















